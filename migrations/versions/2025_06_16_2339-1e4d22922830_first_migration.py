"""First Migration

Revision ID: 1e4d22922830
Revises: 
Create Date: 2025-06-16 23:39:17.063550

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1e4d22922830'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_user_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_role_pkey')),
    schema='mynab'
    )
    op.create_table('auth_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('id_role', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['id_role'], ['mynab.auth_user_role.id'], name=op.f('auth_user_id_role_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_pkey')),
    sa.UniqueConstraint('email', name=op.f('auth_user_email_key')),
    schema='mynab'
    )
    op.create_table('auth_refresh_token',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['mynab.auth_user.id'], name=op.f('auth_refresh_token_id_user_fkey')),
    sa.PrimaryKeyConstraint('uuid', name=op.f('auth_refresh_token_pkey')),
    schema='mynab'
    )
    op.create_table('auth_user_activity_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['mynab.auth_user.id'], name=op.f('auth_user_activity_log_id_user_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_activity_log_pkey')),
    schema='mynab'
    )
    op.create_table('budget_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['mynab.auth_user.id'], name=op.f('budget_category_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('budget_category_pkey')),
    schema='mynab'
    )
    op.create_table('budget_entry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['mynab.auth_user.id'], name=op.f('budget_entry_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('budget_entry_pkey')),
    schema='mynab'
    )
    op.create_table('budget_entry_category',
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['mynab.budget_category.id'], name=op.f('budget_entry_category_category_id_fkey')),
    sa.ForeignKeyConstraint(['entry_id'], ['mynab.budget_entry.id'], name=op.f('budget_entry_category_entry_id_fkey')),
    sa.PrimaryKeyConstraint('entry_id', 'category_id', name=op.f('budget_entry_category_pkey')),
    schema='mynab'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('budget_entry_category', schema='mynab')
    op.drop_table('budget_entry', schema='mynab')
    op.drop_table('budget_category', schema='mynab')
    op.drop_table('auth_user_activity_log', schema='mynab')
    op.drop_table('auth_refresh_token', schema='mynab')
    op.drop_table('auth_user', schema='mynab')
    op.drop_table('auth_user_role', schema='mynab')
    # ### end Alembic commands ###
